name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download .NET Framework SDK
        run: |
          Invoke-WebRequest -Uri "https://download.visualstudio.microsoft.com/download/pr/714a99a2-db28-432e-9a39-4345ba11e73f/5108686aec021898cec3de2cc4d9fd3c/ndp48-devpack-enu.exe" -OutFile "dotnet-framework-installer.exe"

      - name: Install .NET Framework SDK
        run: |
          Start-Process -Wait -FilePath "dotnet-framework-installer.exe" -ArgumentList "/quiet /norestart"

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Restore dependencies and build
        run: |
          nuget restore EVE-AutoInvite.sln
          msbuild.exe /p:Configuration=Release EVE-AutoInvite.sln
      
      - name: Get commit message
        id: commit_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 HEAD)"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: ${{ steps.commit_message.outputs.message }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: D:\a\EVE-AutoInvite\EVE-AutoInvite\bin\Release\EVEAutoInvite.exe
          asset_name: EVEAutoInvite.exe
          asset_content_type: application/octet-stream
